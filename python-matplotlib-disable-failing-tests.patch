diff -up matplotlib-1.5.2rc2/lib/matplotlib/sphinxext/tests/test_tinypages.py.tests matplotlib-1.5.2rc2/lib/matplotlib/sphinxext/tests/test_tinypages.py
--- matplotlib-1.5.2rc2/lib/matplotlib/sphinxext/tests/test_tinypages.py.tests	2016-05-27 04:19:34.000000000 +0200
+++ matplotlib-1.5.2rc2/lib/matplotlib/sphinxext/tests/test_tinypages.py	2016-06-18 00:51:20.449769054 +0200
@@ -1,6 +1,7 @@
 """ Tests for tinypages build using sphinx extensions """
 
 import shutil
+import sys
 import tempfile
 
 from os.path import (join as pjoin, dirname, isdir)
@@ -16,6 +17,8 @@ TINY_PAGES = pjoin(HERE, 'tinypages')
 
 def setup():
     # Check we have the sphinx-build command
+    if sys.version_info[0] >= 3:
+        raise SkipTest('sphinx-build works only with python 2.x')
     try:
         ret = call(['sphinx-build', '--help'], stdout=PIPE, stderr=PIPE)
     except OSError:
diff -up matplotlib-1.5.2rc2/lib/matplotlib/tests/test_axes.py.tests matplotlib-1.5.2rc2/lib/matplotlib/tests/test_axes.py
--- matplotlib-1.5.2rc2/lib/matplotlib/tests/test_axes.py.tests	2016-05-27 04:19:34.000000000 +0200
+++ matplotlib-1.5.2rc2/lib/matplotlib/tests/test_axes.py	2016-06-18 01:07:54.058379133 +0200
@@ -5,6 +5,7 @@ import six
 from six.moves import xrange
 from itertools import chain
 import io
+from distutils.version import LooseVersion
 
 from nose.tools import assert_equal, assert_raises, assert_false, assert_true
 from nose.plugins.skip import SkipTest
@@ -84,7 +85,7 @@ def test_formatter_ticker():
 
 @image_comparison(baseline_images=["formatter_large_small"])
 def test_formatter_large_small():
-    if tuple(map(int, np.__version__.split('.'))) >= (1, 11, 0):
+    if LooseVersion(np.__version__) >= LooseVersion('1.11.0'):
         raise KnownFailureTest("Fall out from a fixed numpy bug")
     # github issue #617, pull #619
     fig, ax = plt.subplots(1)
diff -up matplotlib-1.5.2rc2/lib/matplotlib/tests/test_bbox_tight.py.tests matplotlib-1.5.2rc2/lib/matplotlib/tests/test_bbox_tight.py
--- matplotlib-1.5.2rc2/lib/matplotlib/tests/test_bbox_tight.py.tests	2016-06-18 00:51:19.000000000 +0200
+++ matplotlib-1.5.2rc2/lib/matplotlib/tests/test_bbox_tight.py	2016-06-18 01:09:11.314805850 +0200
@@ -3,6 +3,7 @@ from __future__ import (absolute_import,
 
 import six
 from six.moves import xrange
+from distutils.version import LooseVersion
 
 import numpy as np
 
@@ -91,7 +92,7 @@ def test_bbox_inches_tight_clipping():
                   remove_text=True, savefig_kwarg={'bbox_inches': 'tight'})
 def test_bbox_inches_tight_raster():
     """Test rasterization with tight_layout"""
-    if tuple(map(int, np.__version__.split('.'))) >= (1, 11, 0):
+    if LooseVersion(np.__version__) >= LooseVersion('1.11.0'):
         raise KnownFailureTest("Fall out from a fixed numpy bug")
     fig = plt.figure()
     ax = fig.add_subplot(111)
diff -up matplotlib-1.5.2rc2/lib/matplotlib/tests/test_text.py.tests matplotlib-1.5.2rc2/lib/matplotlib/tests/test_text.py
--- matplotlib-1.5.2rc2/lib/matplotlib/tests/test_text.py.tests	2016-06-18 00:51:19.803773859 +0200
+++ matplotlib-1.5.2rc2/lib/matplotlib/tests/test_text.py	2016-06-18 00:51:20.450769046 +0200
@@ -18,91 +18,6 @@ from matplotlib.text import Annotation,
 from matplotlib.backends.backend_agg import RendererAgg
 
 
-@image_comparison(baseline_images=['font_styles'])
-def test_font_styles():
-    from matplotlib import _get_data_path
-    data_path = _get_data_path()
-
-    def find_matplotlib_font(**kw):
-        prop = FontProperties(**kw)
-        path = findfont(prop, directory=data_path)
-        return FontProperties(fname=path)
-
-    from matplotlib.font_manager import FontProperties, findfont
-    warnings.filterwarnings(
-        'ignore',
-        ('findfont: Font family \[u?\'Foo\'\] not found. Falling back to .'),
-        UserWarning,
-        module='matplotlib.font_manager')
-
-    plt.figure()
-    ax = plt.subplot(1, 1, 1)
-
-    normalFont = find_matplotlib_font(
-        family="sans-serif",
-        style="normal",
-        variant="normal",
-        size=14)
-    ax.annotate(
-        "Normal Font",
-        (0.1, 0.1),
-        xycoords='axes fraction',
-        fontproperties=normalFont)
-
-    boldFont = find_matplotlib_font(
-        family="Foo",
-        style="normal",
-        variant="normal",
-        weight="bold",
-        stretch=500,
-        size=14)
-    ax.annotate(
-        "Bold Font",
-        (0.1, 0.2),
-        xycoords='axes fraction',
-        fontproperties=boldFont)
-
-    boldItemFont = find_matplotlib_font(
-        family="sans serif",
-        style="italic",
-        variant="normal",
-        weight=750,
-        stretch=500,
-        size=14)
-    ax.annotate(
-        "Bold Italic Font",
-        (0.1, 0.3),
-        xycoords='axes fraction',
-        fontproperties=boldItemFont)
-
-    lightFont = find_matplotlib_font(
-        family="sans-serif",
-        style="normal",
-        variant="normal",
-        weight=200,
-        stretch=500,
-        size=14)
-    ax.annotate(
-        "Light Font",
-        (0.1, 0.4),
-        xycoords='axes fraction',
-        fontproperties=lightFont)
-
-    condensedFont = find_matplotlib_font(
-        family="sans-serif",
-        style="normal",
-        variant="normal",
-        weight=500,
-        stretch=100,
-        size=14)
-    ax.annotate(
-        "Condensed Font",
-        (0.1, 0.5),
-        xycoords='axes fraction',
-        fontproperties=condensedFont)
-
-    ax.set_xticks([])
-    ax.set_yticks([])
 
 
 @image_comparison(baseline_images=['multiline'])
diff -up matplotlib-1.5.2rc2/tests.py.tests matplotlib-1.5.2rc2/tests.py
--- matplotlib-1.5.2rc2/tests.py.tests	2016-05-27 04:19:34.000000000 +0200
+++ matplotlib-1.5.2rc2/tests.py	2016-06-18 00:51:20.450769046 +0200
@@ -66,7 +66,7 @@ if __name__ == '__main__':
     if '--no-network' in sys.argv:
         from matplotlib.testing import disable_internet
         disable_internet.turn_off_internet()
-        extra_args.extend(['--eval-attr="not network"'])
+        extra_args.extend(['-a','!network'])
         sys.argv.remove('--no-network')
 
     run(extra_args)
