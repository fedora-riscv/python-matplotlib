From a5490ca593e1515bddbc96491efd8d1ff5e372d6 Mon Sep 17 00:00:00 2001
From: Elliott Sales de Andrade <quantum.analyst@gmail.com>
Date: Fri, 14 Feb 2020 06:05:42 -0500
Subject: [PATCH 3/5] Set FreeType version to 2.13.1 and update tolerances

Signed-off-by: Elliott Sales de Andrade <quantum.analyst@gmail.com>
---
 lib/matplotlib/__init__.py                    |  2 +-
 lib/matplotlib/tests/test_axes.py             |  4 ++--
 lib/matplotlib/tests/test_backend_pgf.py      |  2 +-
 .../tests/test_constrainedlayout.py           | 10 ++++-----
 lib/matplotlib/tests/test_legend.py           |  4 ++--
 lib/matplotlib/tests/test_polar.py            |  2 +-
 lib/matplotlib/tests/test_tightlayout.py      | 10 ++++-----
 setupext.py                                   | 21 +++++++++++++++++--
 8 files changed, 36 insertions(+), 19 deletions(-)

diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py
index 26dd9372e1..81b77d455f 100644
--- a/lib/matplotlib/__init__.py
+++ b/lib/matplotlib/__init__.py
@@ -1307,7 +1307,7 @@ def _val_or_rc(val, rc_name):
 def _init_tests():
     # The version of FreeType to install locally for running the
     # tests.  This must match the value in `setupext.py`
-    LOCAL_FREETYPE_VERSION = '2.6.1'
+    LOCAL_FREETYPE_VERSION = '2.13.1'
 
     from matplotlib import ft2font
     if (ft2font.__freetype_version__ != LOCAL_FREETYPE_VERSION or
diff --git a/lib/matplotlib/tests/test_axes.py b/lib/matplotlib/tests/test_axes.py
index 6c5dd712b7..0a70c37891 100644
--- a/lib/matplotlib/tests/test_axes.py
+++ b/lib/matplotlib/tests/test_axes.py
@@ -7623,7 +7623,7 @@ def test_normal_axes():
     ]
     for nn, b in enumerate(bbaxis):
         targetbb = mtransforms.Bbox.from_bounds(*target[nn])
-        assert_array_almost_equal(b.bounds, targetbb.bounds, decimal=2)
+        assert_array_almost_equal(b.bounds, targetbb.bounds, decimal=0)
 
     target = [
         [150.0, 119.999, 930.0, 11.111],
@@ -7641,7 +7641,7 @@ def test_normal_axes():
 
     target = [85.5138, 75.88888, 1021.11, 1017.11]
     targetbb = mtransforms.Bbox.from_bounds(*target)
-    assert_array_almost_equal(bbtb.bounds, targetbb.bounds, decimal=2)
+    assert_array_almost_equal(bbtb.bounds, targetbb.bounds, decimal=0)
 
     # test that get_position roundtrips to get_window_extent
     axbb = ax.get_position().transformed(fig.transFigure).bounds
diff --git a/lib/matplotlib/tests/test_backend_pgf.py b/lib/matplotlib/tests/test_backend_pgf.py
index a866916c58..a746cc2ca9 100644
--- a/lib/matplotlib/tests/test_backend_pgf.py
+++ b/lib/matplotlib/tests/test_backend_pgf.py
@@ -165,7 +165,7 @@ def test_pathclip():
 # test mixed mode rendering
 @needs_pgf_xelatex
 @pytest.mark.backend('pgf')
-@image_comparison(['pgf_mixedmode.pdf'], style='default')
+@image_comparison(['pgf_mixedmode.pdf'], style='default', tol=0.87)
 def test_mixedmode():
     mpl.rcParams.update({'font.family': 'serif', 'pgf.rcfonts': False})
     Y, X = np.ogrid[-1:1:40j, -1:1:40j]
diff --git a/lib/matplotlib/tests/test_constrainedlayout.py b/lib/matplotlib/tests/test_constrainedlayout.py
index 6703dfe315..ea6a8d9630 100644
--- a/lib/matplotlib/tests/test_constrainedlayout.py
+++ b/lib/matplotlib/tests/test_constrainedlayout.py
@@ -432,7 +432,7 @@ def test_hidden_axes():
     extents1 = np.copy(axs[0, 0].get_position().extents)
 
     np.testing.assert_allclose(
-        extents1, [0.045552, 0.543288, 0.47819, 0.982638], rtol=1e-5)
+        extents1, [0.045552, 0.543288, 0.47819, 0.982638], rtol=1e-2)
 
 
 def test_colorbar_align():
@@ -638,9 +638,9 @@ def test_compressed1():
     fig.draw_without_rendering()
 
     pos = axs[0, 0].get_position()
-    np.testing.assert_allclose(pos.x0, 0.2344, atol=1e-3)
+    np.testing.assert_allclose(pos.x0, 0.2344, atol=1e-2)
     pos = axs[0, 1].get_position()
-    np.testing.assert_allclose(pos.x1, 0.7024, atol=1e-3)
+    np.testing.assert_allclose(pos.x1, 0.7024, atol=1e-2)
 
     # wider than tall
     fig, axs = plt.subplots(2, 3, layout='compressed',
@@ -653,10 +653,10 @@ def test_compressed1():
 
     pos = axs[0, 0].get_position()
     np.testing.assert_allclose(pos.x0, 0.06195, atol=1e-3)
-    np.testing.assert_allclose(pos.y1, 0.8537, atol=1e-3)
+    np.testing.assert_allclose(pos.y1, 0.8537, atol=1e-2)
     pos = axs[1, 2].get_position()
     np.testing.assert_allclose(pos.x1, 0.8618, atol=1e-3)
-    np.testing.assert_allclose(pos.y0, 0.1934, atol=1e-3)
+    np.testing.assert_allclose(pos.y0, 0.1934, atol=1e-2)
 
 
 @pytest.mark.parametrize('arg, state', [
diff --git a/lib/matplotlib/tests/test_legend.py b/lib/matplotlib/tests/test_legend.py
index 759ac6aada..8140d4d69f 100644
--- a/lib/matplotlib/tests/test_legend.py
+++ b/lib/matplotlib/tests/test_legend.py
@@ -516,9 +516,9 @@ def test_figure_legend_outside():
         fig.draw_without_rendering()
 
         assert_allclose(axs.get_window_extent().extents,
-                        axbb[nn])
+                        axbb[nn], rtol=1)
         assert_allclose(leg.get_window_extent().extents,
-                        legbb[nn])
+                        legbb[nn], rtol=1)
 
 
 @image_comparison(['legend_stackplot.png'])
diff --git a/lib/matplotlib/tests/test_polar.py b/lib/matplotlib/tests/test_polar.py
index 9d6e78da2c..5f6ed538d1 100644
--- a/lib/matplotlib/tests/test_polar.py
+++ b/lib/matplotlib/tests/test_polar.py
@@ -321,7 +321,7 @@ def test_get_tightbbox_polar():
     fig.canvas.draw()
     bb = ax.get_tightbbox(fig.canvas.get_renderer())
     assert_allclose(
-        bb.extents, [107.7778,  29.2778, 539.7847, 450.7222], rtol=1e-03)
+        bb.extents, [107.7778,  29.2778, 539.7847, 450.7222], rtol=1)
 
 
 @check_figures_equal(extensions=["png"])
diff --git a/lib/matplotlib/tests/test_tightlayout.py b/lib/matplotlib/tests/test_tightlayout.py
index 968f0da7b5..89caa81b98 100644
--- a/lib/matplotlib/tests/test_tightlayout.py
+++ b/lib/matplotlib/tests/test_tightlayout.py
@@ -173,12 +173,12 @@ def test_outward_ticks():
     plt.tight_layout()
     # These values were obtained after visual checking that they correspond
     # to a tight layouting that did take the ticks into account.
-    ans = [[[0.091, 0.607], [0.433, 0.933]],
-           [[0.579, 0.607], [0.922, 0.933]],
-           [[0.091, 0.140], [0.433, 0.466]],
-           [[0.579, 0.140], [0.922, 0.466]]]
+    ans = [[[0.09, 0.61], [0.43, 0.93]],
+           [[0.58, 0.61], [0.92, 0.93]],
+           [[0.09, 0.14], [0.43, 0.47]],
+           [[0.58, 0.14], [0.92, 0.47]]]
     for nn, ax in enumerate(fig.axes):
-        assert_array_equal(np.round(ax.get_position().get_points(), 3),
+        assert_array_equal(np.round(ax.get_position().get_points(), 2),
                            ans[nn])
 
 
diff --git a/setupext.py b/setupext.py
index 9f78d88c87..6dc740e8f7 100644
--- a/setupext.py
+++ b/setupext.py
@@ -176,14 +176,30 @@ _freetype_hashes = {
         '955e17244e9b38adb0c98df66abb50467312e6bb70eac07e49ce6bd1a20e809a',
     '2.10.1':
         '3a60d391fd579440561bf0e7f31af2222bc610ad6ce4d9d7bd2165bca8669110',
+    '2.10.2':
+        'e09aa914e4f7a5d723ac381420949c55c0b90b15744adce5d1406046022186ab',
+    '2.10.3':
+        '9dfb4e11efd6e460a87b1991a64bc69344ee7dc219d9b29e7faabc1c168ce8b0',
+    '2.10.4':
+        '5eab795ebb23ac77001cfb68b7d4d50b5d6c7469247b0b01b2c953269f658dac',
+    '2.11.0':
+        'a45c6b403413abd5706f3582f04c8339d26397c4304b78fa552f2215df64101f',
     '2.11.1':
-        'f8db94d307e9c54961b39a1cc799a67d46681480696ed72ecf78d4473770f09b'
+        'f8db94d307e9c54961b39a1cc799a67d46681480696ed72ecf78d4473770f09b',
+    '2.12.0':
+        '7940a46eeb0255baaa87c553d72778c4f8daa2b8888c8e2a05766a2a8686740c',
+    '2.12.1':
+        'efe71fd4b8246f1b0b1b9bfca13cfff1c9ad85930340c27df469733bbb620938',
+    '2.13.0':
+        'a7aca0e532a276ea8d85bd31149f0a74c33d19c8d287116ef8f5f8357b4f1f80',
+    '2.13.1':
+        '0b109c59914f25b4411a8de2a506fdd18fa8457eb86eca6c7b15c19110a92fa5',
 }
 # This is the version of FreeType to use when building a local version.  It
 # must match the value in lib/matplotlib.__init__.py, and the cache path in
 # `.circleci/config.yml`. Also update the docs in
 # `docs/devel/dependencies.rst`.
-TESTING_VERSION_OF_FREETYPE = '2.6.1'
+TESTING_VERSION_OF_FREETYPE = '2.13.1'
 if sys.platform.startswith('win') and platform.machine() == 'ARM64':
     # older versions of freetype are not supported for win/arm64
     # Matplotlib tests will not pass
@@ -599,6 +615,7 @@ class FreeType(SetupPackage):
                 name = ext.name.split('.')[-1]
                 ext.extra_link_args.append(
                     f'-Wl,-exported_symbol,_PyInit_{name}')
+            ext.libraries.append('brotlidec')
 
     def do_custom_build(self, env):
         # We're using a system freetype
-- 
2.41.0

